<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.soc.securityoperationscenter.dao.UsersMapper">
    <resultMap id="BaseResultMap" type="cn.soc.securityoperationscenter.entity.Users">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="jurisdiction" jdbcType="INTEGER" property="jurisdiction"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime"/>
        <result column="registerTime" jdbcType="TIMESTAMP" property="registertime"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.soc.securityoperationscenter.entity.Users">
        insert into users (id, username, password,
        telephone, email, jurisdiction,
        status, lastLoginTime, registerTime
        )
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        <choose>
            <when test="jurisdiction !=null">
                <![CDATA[
                #{jurisdiction,jdbcType=TIMESTAMP},
            ]]>
            </when>
            <otherwise>
                default,
            </otherwise>
        </choose>
        default, default, default
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.soc.securityoperationscenter.entity.Users">
        update users
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        telephone = #{telephone,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        jurisdiction = #{jurisdiction,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        <if test="lastlogintime !=null ">
            <![CDATA[
                lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
            ]]>
        </if>
        registerTime = #{registertime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, password, telephone, email, jurisdiction, status, lastLoginTime, 
    registerTime
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>

    <select id="selectAll" parameterType="cn.soc.securityoperationscenter.entity.Users" resultMap="BaseResultMap">
        select id, username, password, telephone, email, jurisdiction, status, lastLoginTime,
        registerTime
        from users
        where
        1 = 1
        <if test="username != null and username != ''">
            <![CDATA[
                and username like concat('%',#{username,jdbcType=VARCHAR},'%')
            ]]>
        </if>
        <if test="telephone != null and telephone != ''">
            <![CDATA[
                and telephone like concat('%',#{telephone,jdbcType=VARCHAR},'%')
            ]]>
        </if>
        <if test="email != null and email != ''">
            <![CDATA[
                and email like concat('%',#{email,jdbcType=VARCHAR},'%')
            ]]>
        </if>
        <if test="status != null">
            <![CDATA[
                and status like concat('%',#{status,jdbcType=INTEGER},'%')
            ]]>
        </if>
    </select>

    <select id="selectByNamePass" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, username, password, telephone, email, jurisdiction, status, lastLoginTime,
    registerTime
    from users
    where (telephone = #{username,jdbcType=VARCHAR} or
     email = #{username,jdbcType=VARCHAR} ) and
     password = #{password,jdbcType=VARCHAR}
  </select>

    <select id="validateTelephoneEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, username, password, telephone, email, jurisdiction, status, lastLoginTime,
    registerTime
    from users
    where telephone = #{telephone,jdbcType=VARCHAR} or
     email = #{email,jdbcType=VARCHAR}
  </select>

</mapper>